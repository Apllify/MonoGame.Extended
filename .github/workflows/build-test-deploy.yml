name: "Build test deploy"

on:
  push:
    branches: [develop]
    tags: [v*]
  pull_request:
    branches: [develop]
  pull_request_target:
    branches: [develop]

jobs:
  build-test-pack-job:
    name: "Build-Test-Pack"
    runs-on: ubuntu-latest
    steps:
      - name: "Clone Repository"
        uses: actions/checkout@v4
      - name: "CAKE (Build)"
        run: dotnet run --project ./build/Build.csproj -- --target=BuildTask
      - name: "CAKE (Test)"
        run: dotnet run --project ./build/Build.csproj -- --target=TestTask

      # Creating packages does not need ot run on pull requets, just the build and
      # test above.
      - name: "Run CAKE Build -> Test -> Package"
        if: github.event_name != 'pull_request'
        run: dotnet run --project ./build/Build.csproj -- --target=Default
      - name: "Package Artifacts"
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@main
        with:
          name: MonoGame.Extended
          path: artifacts/*


  deploy-job:
      name: "Deploy Nugets"
      runs-on: ubuntu-latest
      permissions:
        packages: write
        contents: write
      needs: [build-test-pack-job]
      if: ${{ github.event_name == 'push' }}
      steps:
        - name: "Clone Repository"
          uses: actions/checkout@v4
        - name: Download Artifacts
          uses: actions/download-artifact@v3
          with:
            name: MonoGame.Extended
            path: artifacts
        - name: "Push Package (GitHub Feed)"
          run: dotnet nuget push artifacts/*.nupkg --source https://nuget.pkg.github.com/$GITHUB_REPOSITORY_OWNER/index.json --api-key ${GITHUB_TOKEN}
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        - name: "Push Packages (MyGet Feed)"
          run: dotnet nuget push artifacts/*.nupkg --source ${MYGET_SOURCE_URL} --api-key ${MYGET_ACCESS_TOKEN}
          env:
            MYGET_ACCESS_TOKEN: ${{ secrets.MYGET_ACCESS_TOKEN }}
            MYGET_SOURCE_URL: 'https://www.myget.org/F/lithiumtoast/api/v3/index.json'

        # Pushes packages to nuget, but only if this is a tag release.
        - name: "Push Packages (NuGet Feed)"
          if: github.ref_type == 'tag'
          run: dotnet nuget push artifacts/*.nupkg --source ${NUGET_SOURCE_URL} --api-key ${NUGET_ACCESS_TOKEN}
          env:
            NUGET_ACCESS_TOKEN: ${{ secrets.NUGET_ACCESS_TOKEN }}
            NUGET_SOURCE_URL: "https://api.nuget.org/v3/index.json"
